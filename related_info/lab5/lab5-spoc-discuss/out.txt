+ cc kern/process/proc.c
+ ld bin/kernel
(THU.CST) os is loading ...

Special kernel symbols:
  entry  0xc010002c (phys)
  etext  0xc010c7ef (phys)
  edata  0xc019ef2a (phys)
  end    0xc01a20b8 (phys)
Kernel executable memory footprint: 649KB
ebp:0xc012cf48 eip:0xc0101dd6 args:0x00010074 0x001a2200 0xc012cf78 0xc01000c2 
    kern/debug/kdebug.c:350: print_stackframe+21
ebp:0xc012cf58 eip:0xc01020c6 args:0x00000000 0x00000000 0x00000000 0xc012cfc8 
    kern/debug/kmonitor.c:129: mon_backtrace+10
ebp:0xc012cf78 eip:0xc01000c2 args:0x00000000 0xc012cfa0 0xffff0000 0xc012cfa4 
    kern/init/init.c:57: grade_backtrace2+19
ebp:0xc012cf98 eip:0xc01000e3 args:0x00000000 0xffff0000 0xc012cfc4 0x0000002a 
    kern/init/init.c:62: grade_backtrace1+27
ebp:0xc012cfb8 eip:0xc01000ff args:0x00000000 0xc010002c 0xffff0000 0xc010006f 
    kern/init/init.c:67: grade_backtrace0+19
ebp:0xc012cfd8 eip:0xc010011f args:0x00000000 0x00000000 0x00000000 0xc010c800 
    kern/init/init.c:72: grade_backtrace+26
ebp:0xc012cff8 eip:0xc010007c args:0x00000000 0x00000000 0x0000ffff 0x40cf9a00 
    kern/init/init.c:32: kern_init+79
memory management: default_pmm_manager
e820map:
  memory: 0009fc00, [00000000, 0009fbff], type = 1.
  memory: 00000400, [0009fc00, 0009ffff], type = 2.
  memory: 00010000, [000f0000, 000fffff], type = 2.
  memory: 07ee0000, [00100000, 07fdffff], type = 1.
  memory: 00020000, [07fe0000, 07ffffff], type = 2.
  memory: 00040000, [fffc0000, ffffffff], type = 2.
check_alloc_page() succeeded!
check_pgdir() succeeded!
check_boot_pgdir() succeeded!
-------------------- BEGIN --------------------
PDE(0e0) c0000000-f8000000 38000000 urw
  |-- PTE(38000) c0000000-f8000000 38000000 -rw
PDE(001) fac00000-fb000000 00400000 -rw
  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
--------------------- END ---------------------
use SLOB allocator
check_slab() success
kmalloc_init() succeeded!
check_vma_struct() succeeded!
page fault at 0x00000100: K/W [no page found].
check_pgfault() succeeded!
check_vmm() succeeded.
----BEGIN:FORK-------------------------------------------------
Syscall sys_fork
Alloc kernel process, state set to UNINIT
Set up parent process
Set up kernel stack
Copy mm
Copy thread
Call wakeup_proc
wakeup_proc: state set to RUNNABLE
----END:FORK------------------------------------------------
ide 0:      10000(sectors), 'QEMU HARDDISK'.
ide 1:     262144(sectors), 'QEMU HARDDISK'.
SWAP: manager = fifo swap manager
BEGIN check_swap: count 31801, total 31801
setup Page Table for vaddr 0X1000, so alloc a page
setup Page Table vaddr 0~4MB OVER!
set up init env for check_swap begin!
page fault at 0x00001000: K/W [no page found].
page fault at 0x00002000: K/W [no page found].
page fault at 0x00003000: K/W [no page found].
page fault at 0x00004000: K/W [no page found].
set up init env for check_swap over!
write Virt Page c in fifo_check_swap
write Virt Page a in fifo_check_swap
write Virt Page d in fifo_check_swap
write Virt Page b in fifo_check_swap
write Virt Page e in fifo_check_swap
page fault at 0x00005000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
write Virt Page b in fifo_check_swap
write Virt Page a in fifo_check_swap
page fault at 0x00001000: K/W [no page found].
do pgfault: ptep c03a7004, pte 200
swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
write Virt Page b in fifo_check_swap
page fault at 0x00002000: K/W [no page found].
do pgfault: ptep c03a7008, pte 300
swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
write Virt Page c in fifo_check_swap
page fault at 0x00003000: K/W [no page found].
do pgfault: ptep c03a700c, pte 400
swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
write Virt Page d in fifo_check_swap
page fault at 0x00004000: K/W [no page found].
do pgfault: ptep c03a7010, pte 500
swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
count is 5, total is 5
check_swap() succeeded!
++ setup timer interrupts
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03a7000
Loading PDT, CR3 address: 2c3000
Switching, pid: 0 --> pid: 1...
----BEGIN:FORK-------------------------------------------------
Syscall sys_fork
Alloc kernel process, state set to UNINIT
Set up parent process
Set up kernel stack
Copy mm
Copy thread
Call wakeup_proc
wakeup_proc: state set to RUNNABLE
----END:FORK------------------------------------------------
----BEGIN:FORK-------------------------------------------------
Syscall sys_fork
Alloc kernel process, state set to UNINIT
Set up parent process
Set up kernel stack
Copy mm
Copy thread
Call wakeup_proc
wakeup_proc: state set to RUNNABLE
----END:FORK------------------------------------------------
Syscall: sys_wait
sys_wait: wait to free any zombie
sys_wait: set pid 1 state to SLEEPING
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03b0000
Loading PDT, CR3 address: 2c3000
Switching, pid: 1 --> pid: 3...
kernel_execve: pid = 3, name = "exit".
----BEGIN:EXECVE---------------------------------------------
Launching user process, syscall: do_execve, name: exit
Setting local name: exit
Loading user program code, address: c0144585, size: 30917
Creating mm
Setting up PDT, address: c03b0000
Load CR3
Setting up trapframe for user environment
CS: 1b, DS: 23, ESP: b0000000, EIP: 800020, EFLAGS: 200
----END:EXECVE------------------------------------------
I am the parent. Forking the child...
----BEGIN:FORK-------------------------------------------------
Syscall sys_fork
Alloc kernel process, state set to UNINIT
Set up parent process
Set up kernel stack
Copy mm
Copy thread
Call wakeup_proc
wakeup_proc: state set to RUNNABLE
----END:FORK------------------------------------------------
I am parent, fork a child pid 4
I am the parent, waiting now..
Syscall: sys_wait
sys_wait: waiting fro child, pid: 4
sys_wait: set pid 3 state to SLEEPING
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03ae000
Loading PDT, CR3 address: 2c3000
Switching, pid: 3 --> pid: 2...
kernel_execve: pid = 2, name = "exit".
----BEGIN:EXECVE---------------------------------------------
Launching user process, syscall: do_execve, name: exit
Setting local name: exit
Loading user program code, address: c0144585, size: 30917
Creating mm
Setting up PDT, address: c03d0000
Load CR3
Setting up trapframe for user environment
CS: 1b, DS: 23, ESP: b0000000, EIP: 800020, EFLAGS: 200
----END:EXECVE------------------------------------------
I am the parent. Forking the child...
----BEGIN:FORK-------------------------------------------------
Syscall sys_fork
Alloc kernel process, state set to UNINIT
Set up parent process
Set up kernel stack
Copy mm
Copy thread
Call wakeup_proc
wakeup_proc: state set to RUNNABLE
----END:FORK------------------------------------------------
I am parent, fork a child pid 5
I am the parent, waiting now..
Syscall: sys_wait
sys_wait: waiting fro child, pid: 5
sys_wait: set pid 2 state to SLEEPING
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 2 --> pid: 5...
I am the child.
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
I am the child.
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
Syscal: sys_yield
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03e1000
Loading PDT, CR3 address: 3e1000
Switching, pid: 4 --> pid: 5...
----BEGIN:EXIT------------------------------------------------
Syscall do_exit
Set state to ZOMBIE
Set exit code: -66436
Wakeup parent, pid: 2
wakeup_proc: state set to RUNNABLE
----END:EXIT-----------------------------------------------
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03c1000
Loading PDT, CR3 address: 3c1000
Switching, pid: 5 --> pid: 4...
----BEGIN:EXIT------------------------------------------------
Syscall do_exit
Set state to ZOMBIE
Set exit code: -66436
Wakeup parent, pid: 3
wakeup_proc: state set to RUNNABLE
----END:EXIT-----------------------------------------------
Schedule: checking for next PROC_RUNNABLE
Schedule: proc_run
Loading esp, address: c03b0000
Loading PDT, CR3 address: 3b0000
Switching, pid: 4 --> pid: 3...
sys_wait: waiting fro child, pid: 4
sys_wait: found zombie, pid 4
Syscall: sys_wait
not valid addr 4, and  can not find it in vma
trapframe at 0xc03afe8c
  edi  0x008002be
  esi  0x00000004
  ebp  0xc03afee8
  oesp 0xc03afeac
  ebx  0xafffff78
  edx  0x000001e3
  ecx  0x00000316
  eax  0x00000000
  ds   0x----0010
  es   0x----0010
  fs   0x----0000
  gs   0x----0000
  trap 0x0000000e Page Fault
  err  0x00000000
  eip  0xc010b298
  cs   0x----0008
  flag 0x00000282 SF,IF,IOPL=0
kernel panic at kern/trap/trap.c:207:
    handle pgfault failed in kernel mode. ret=-3

Welcome to the kernel debug monitor!!
Type 'help' for a list of commands.
K> 